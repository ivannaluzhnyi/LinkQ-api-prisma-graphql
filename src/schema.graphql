# import Account, Mutation.updateAccount, Mutation.deleteAccount, Query.account, Query.accounts from "./generated/prisma.graphql"
# import Event, EventCreateInput, Mutation.updateEvent, Mutation.deleteEvent, Query.event, Query.events from "./generated/prisma.graphql"
# import Application, ApplicationCreateInput, Mutation.updateApplication, Mutation.deleteApplication, Query.application, Query.applications from "./generated/prisma.graphql"
# import Contract, ContractCreateInput, Mutation.updateContract, Mutation.deleteContract, Query.contract, Query.contracts from "./generated/prisma.graphql"

type Query {
    me: Account
}

type Mutation {
    signup(
        email: String!
        isActive: Boolean!
        password: String!
        roles: Json!
        firstname: String
        lastname: String
        salary: Float
    ): AuthPayload!
    login(email: String!, password: String!): AuthPayload!

    createEvent(data: EventCreateInput!): Event!
    createApplication(data: ApplicationCreateInput!): Application!
    createContract(data: ContractCreateInput!): Contract!
}

type AuthPayload {
    token: String!
    user: Account!
}

type Subscription {
    account: AccountSubscription
    event: EventSubscription
    login: LoginSubscription
    application: ApplicationSubscription
    contract: ContractSubscription
}

type AccountSubscription {
    actionType: ActionType
    account: Account
}

enum ActionType {
    CREATE
    UPDATE
    DELETE
}

type EventSubscription {
    actionType: ActionType
    event: Event
}

type LoginSubscription {
    account: Account
    time_connexion: DateTime
}

type ApplicationSubscription {
    actionType: ActionType
    application: Application
}

type ContractSubscription {
    actionType: ActionType
    contract: Contract
}
